#Python imports
import os
import subprocess
import sys

#ICM imports
import ICM_Settings as icm
import ICM_HelperFunctions as hf



#TODO passing in year may not be necessary, only used for documentation
def RunBI(
        year, bimode_folders, bimode_dir, BIMHWFile, IslandMHWCompLists, BIMODEmhw, bidem_exe_path, 
        elapsedyear, bidem_fixed_grids, bidem_xyz_file 
        ):
    
    #########################################################
    ##              RUN BARRIER ISLAND MODEL               ##
    #########################################################

    print('\n--------------------------------------------------' )
    print('  RUNNING BARRIER ISLAND MODEL (ICM-BIDEM) - Year %s' % year)
    print('--------------------------------------------------\n')
    print(' See separate log files generated by each BI region.')

    # Loop BI runs over the different folders - each with individual executables and I/O
    fol_n = 0
    for fol in bimode_folders:
        print('\n Modeling %s' % fol)
        bmdir = os.path.normpath(r'%s/%s' %(bimode_dir,fol))
        os.chdir(bmdir)

        print(' Writing mean water level file for %s region.' % fol)
        mhw_file_for_bimode = os.path.normpath(r'%s/input/%s' % (bmdir,BIMHWFile))
        with open(mhw_file_for_bimode,'w') as f:
            f.write('% MHW (m NAVD88)\t%SLR_A\t%SLR_B\t%Region ')
            f.write('\n')
            for n in range(0,len(IslandMHWCompLists)):
                bmhw = str(BIMODEmhw[n])+'\t0.000\t0.000\t'+str(n+1)
                f.write(bmhw)
                f.write('\n')


        # Run compiled Fortran executable - will automatically return to Python window when done running
        print(' Running BIDEM executable for %s region.' % fol)
        bimoderun = subprocess.call(bidem_exe_path)

        if bimoderun != 0:
            error_msg = '\n BIDEM model run for region %s year %s was unsuccessful.' % (fol,year)
            sys.exit(error_msg)
        
        os.remove('input.txt')
        os.rename('input.txt.new','input.txt')
        
        print(' Interpolating BIDEM outputs for %s to ICM-Morph DEM' % fol)
        bidem_out = './results/profile_%04d' % elapsedyear
        fixed_grid_in = bidem_fixed_grids[fol_n]
        fixed_grid_out = './results/profile_%04d_interp.xyz' % elapsedyear
        hf.bidem_interp2xyz(bidem_out,fixed_grid_in,fixed_grid_out)

        print(' Appending interpolated %s regional BIDEM output to coastwide file for use in ICM-Morph' % fol)
        with open(bidem_xyz_file,mode='a') as allout:
            with open(fixed_grid_out,mode='r') as regout:
                for line in regout:
                    allout.write(line)
        fol_n += 1

        # delete temp file that has region xyz snapped to DEM grid
        os.remove(fixed_grid_out) 

